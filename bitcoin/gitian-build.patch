--- gitian-build.sh	2017-04-07 15:34:13.415933322 +0200
+++ gitian-build2.sh	2017-04-07 15:34:07.715628186 +0200
@@ -142,7 +142,7 @@
 	    fi
 	    ;;
 	# URL
-	-u)
+	-u|--url)
 	    if [ -n "$2" ]
 	    then
 		url=$2
@@ -175,13 +175,6 @@
     shift
 done
 
-# Set up LXC
-if [[ $lxc = true ]]
-then
-    export USE_LXC=1
-    export LXC_BRIDGE=lxcbr0
-    sudo ifconfig lxcbr0 up 10.0.2.2
-fi
 
 # Check for OSX SDK
 if [[ ! -e "gitian-builder/inputs/MacOSX10.11.sdk.tar.gz" && $osx == true ]]
@@ -228,18 +221,92 @@
 fi
 echo ${COMMIT}
 
+function install_vm-builder_from_source() {
+    wget http://archive.ubuntu.com/ubuntu/pool/universe/v/vm-builder/vm-builder_0.12.4+bzr494.orig.tar.gz
+    local sumcheck=$(echo "76cbf8c52c391160b2641e7120dbade5afded713afaa6032f733a261f13e6a8e  vm-builder_0.12.4+bzr494.orig.tar.gz" | sha256sum -c)
+
+    # (verification -- must return OK)
+    if [[ $(echo $sumcheck | awk '{print $2}') == "OK" ]]
+    then
+        tar -zxvf vm-builder_0.12.4+bzr494.orig.tar.gz
+        pushd vm-builder-0.12.4+bzr494
+            sudo python setup.py install
+        popd
+    else
+        echo "Fail to install vm-builder from source - bad checksum"
+        echo "checksum: $(sha256sum vm-builder_0.12.4+bzr494.orig.tar.gz | awk '{print $1}')"
+        echo "expected: 76cbf8c52c391160b2641e7120dbade5afded713afaa6032f733a261f13e6a8e"
+        exit 1
+    fi
+
+    #clean
+    rm vm-builder_0.12.4+bzr494.orig.tar.gz
+}
+
+function setup_lxc_bridge-device() {
+
+    if [[ -n $(ip a | grep " br0" | grep "10.0.3.2/24") ]];
+    then
+        echo "br0 - OK"
+        echo "This is only a simple check. More checks should be done"
+    else
+        sudo apt-get install bridge-utils -y
+
+        # the version of lxc-start in Debian needs to run as root, so make sure
+        # that the build script can execute it without providing a password
+
+        echo "Editing with sudo: /etc/sudoers.d/gitian-lxc"
+        sudo echo "%sudo ALL=NOPASSWD: /usr/bin/lxc-start" | sudo tee /etc/sudoers.d/gitian-lxc
+        sudo echo "%sudo ALL=NOPASSWD: /usr/bin/lxc-execute" | sudo tee --append /etc/sudoers.d/gitian-lxc
+
+        # make /etc/rc.local script that sets up bridge between guest and host
+
+        echo "Editing with sudo: /etc/rc.local"
+        sudo echo '#!/bin/sh -e' | sudo tee /etc/rc.local
+        sudo echo 'brctl addbr br0' | sudo tee -a /etc/rc.local
+        sudo echo 'ifconfig br0 10.0.3.2/24 up' | sudo tee -a /etc/rc.local
+        sudo echo 'iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE' | sudo tee -a /etc/rc.local
+        sudo echo 'echo 1 > /proc/sys/net/ipv4/ip_forward' | sudo tee -a /etc/rc.local
+        sudo echo 'exit 0' | sudo tee -a /etc/rc.local
+
+        # make sure that USE_LXC is always set when logging in as debian,
+        # and configure LXC IP addresses
+        # this step does not require sudo
+        echo "Editing $HOME/.profile"
+        echo 'export USE_LXC=1' >> "$HOME/.profile"
+        echo 'export GITIAN_HOST_IP=10.0.3.2' >> "$HOME/.profile"
+        echo 'export LXC_GUEST_IP=10.0.3.5' >> "$HOME/.profile"
+        echo "Apply of this step require reboot of your machine: exiting"
+        exit 0
+    fi
+}
+
 # Setup build environment
 if [[ $setup = true ]]
 then
-    sudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm qemu-utils
+    sudo apt-get install ruby apache2 git apt-cacher-ng qemu-kvm qemu-utils make curl debootstrap -y
+
+
+    # vm-builder - debian repisitory does not have python-vm-builder
+    if [ "`grep -i debian /etc/issue`" ]
+    then
+        install_vm-builder_from_source
+    else
+        sudo apt-get install python-vm-builder -y
+    fi
+
     git clone https://github.com/bitcoin-core/gitian.sigs.git
     git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git
     git clone https://github.com/devrandom/gitian-builder.git
     pushd ./gitian-builder
-    if [[ -n "$USE_LXC" ]]
+
+    # Set up LXC (this step is only necessary once - in setup)
+    if [[ $lxc = true ]]
     then
-        sudo apt-get install lxc
+        sudo apt-get install lxc -y
+
         bin/make-base-vm --suite trusty --arch amd64 --lxc
+        setup_lxc_bridge-device
     else
         bin/make-base-vm --suite trusty --arch amd64
     fi
@@ -257,12 +324,12 @@
 then
 	# Make output folder
 	mkdir -p ./bitcoin-binaries/${VERSION}
-	
+
 	# Build Dependencies
 	echo ""
 	echo "Building Dependencies"
 	echo ""
-	pushd ./gitian-builder	
+	pushd ./gitian-builder
 	mkdir -p inputs
 	wget -N -P inputs $osslPatchUrl
 	wget -N -P inputs $osslTarUrl
@@ -331,10 +398,10 @@
 	echo "Verifying v${VERSION} Windows"
 	echo ""
 	./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml
-	# Mac OSX	
+	# Mac OSX
 	echo ""
 	echo "Verifying v${VERSION} Mac OSX"
-	echo ""	
+	echo ""
 	./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml
 	# Signed Windows
 	echo ""
@@ -345,14 +412,14 @@
 	echo ""
 	echo "Verifying v${VERSION} Signed Mac OSX"
 	echo ""
-	./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml	
+	./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml
 	popd
 fi
 
 # Sign binaries
 if [[ $sign = true ]]
 then
-	
+
         pushd ./gitian-builder
 	# Sign Windows
 	if [[ $windows = true ]]
